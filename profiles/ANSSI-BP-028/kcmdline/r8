l1tf=full,force
active sans possibilité de désactivation ultérieure toutes les contre-
mesures pour la vulnérabilité L1 Terminal Fault (L1TF) présente sur la plu-
part des processeurs Intel (en 2018 tout du moins). À noter que cela désactive
Symmetric MultiThreading (SMT) et peut donc avoir un impact fort sur les per-
formances du système. Cette option n’est toutefois nécessaire que lorsque le sys-
tème est susceptible d’être utilisé comme hyperviseur. Si les machines virtuelles
sont de confiance, c’est-à-dire avec un système d’exploitation invité à la fois de
confiance et protégé contre la vulnérabilité L1TF, cette option n’est pas nécessaire
et peut même être remplacée par l1tf=off pour maximiser les performances ;

page_poison=on
active le poisoning des pages de l’allocateur de pages (buddy
allocator). Cette fonctionnalité permet de remplir les pages libérées avec des
motifs lors de leur libération et de vérifier les motifs lors de leur allocation. Ce
remplissage permet de réduire le risque de fuites d’informations à partir des don-
nées libérées ;

pti=on
force l’utilisation de Page Table Isolation (PTI) y compris sur les pro-
cesseurs se prétendant non impactés par la vulnérabilité Meltdown ;

slab_nomerge=yes
(équivalent à CONFIG_SLAB_MERGE_DEFAULT=n) : désactive la
fusion de caches slabs (allocations mémoire dynamiques) de taille identique.
Cette fonctionnalité permet de différentier les allocations entre les différents
caches slabs, et complique fortement les méthodologies de pétrissage du tas (heap
massaging) en cas de heap overflow ;

slub_debug=FZP
active certaines options de vérification des caches slabs (alloca-
tions mémoire dynamiques) :
- F active les tests de cohérence des métadonnées des caches slabs,
- Z active le Red Zoning ; dans un cache slab, ajoute une zone rouge après chaque
  objet afin de détecter des écritures après celui-ci. Il est important de noter que
  la valeur utilisée pour la zone rouge n’est pas aléatoire et qu’il s’agit donc d’un
  durcissement bien plus faible que l’utilisation de véritables canaris,
- P active le poisoning des objets et du padding, c’est-à-dire provoque une erreur
  lors de l’accès aux zones empoisonnées ;

spec_store_bypass_disable=seccomp
force le système à utiliser la contre-mesure
par défaut (sur un système x86 supportant seccomp) pour la vulnérabilité Spectre
v4 (Speculative Store Bypass) ;

spectre_v2=on
force le système à utiliser une contre-mesure pour la vulnérabilité
Spectre v2 (Branch Target Injection). Cette option active spectre_v2_user=on
qui évite les attaques Single Threaded Indirect Branch Predictors (STIBP)
et Indirect Branch Prediction Barrier 12 (IBPB) ;

mds=full,nosmt
force le système à utiliser Microarchitectural Data Sampling
(MDS) pour atténuer les vulnérabilités des processeurs Intel. L’option mds=full,
qui laisse Symmetric MultiThreading (SMT) activé, n’est donc pas une atténua-
tion complète. Cette atténuation nécessite une mise à jour du microcode Intel
et atténue également la vulnérabilité TSX Asynchronous Abort (TAA) du proces-
seur Intel sur les systèmes affectés par MDS ;

mce=0
force un kernel panic sur les erreurs non corrigées signalées par le sup-
port Machine Check. Sinon, certaines d’entre elles provoquent uniquement l’en-
voi d’un SIGBUS, permettant potentiellement à un processus malveillant de conti-
nuer à essayer d’exploiter une vulnérabilité par exemple Rowhammer ;

page_alloc.shuffle=1
(équivalent à CONFIG_SHUFFLE_PAGE_ALLOCATOR=y) : ac-
tive le Page allocator randomization qui améliore les performances pour l’uti-
lisation du direct-mapped memory-side-cache mais réduit la prévisibilité des al-
locations de page et complète ainsi SLAB_FREELIST_RANDOM ;

rng_core.default_quality=500
augmente la confiance dans HWRNG du TPM
pour une initialisation robuste et rapide du CSPRNG de Linux en créditant la moitié
de l’entropie qu’il fournit.
